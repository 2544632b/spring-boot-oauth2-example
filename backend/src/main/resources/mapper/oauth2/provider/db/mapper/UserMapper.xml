<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- :( -->
<mapper namespace="oauth2.provider.db.mapper.UserMapper">

    <!--Structure-->
    <resultMap id="userEntityMap" type="oauth2.provider.model.user.info.entity.UserEntity">
        <result property="username" column="user_login" />
        <result property="password" column="user_pass" />
        <result property="email" column="user_email" />
        <result property="address" column="user_reg_ip" />
        <result property="registerDate" column="user_reg_date" />
        <result property="userStatus" column="user_status" />
        <result property="userTotp" column="user_totp_token" />
        <result property="githubId" column="github_id" />
    </resultMap>
    
    <!--Find by any keys-->
    <select id="findByKeywords" resultMap="userEntityMap">
        select
        <!--[CONTENT BEGIN]-->
        user_login,
        user_pass,
        user_email,
        user_reg_ip,
        user_reg_date,
        user_status,
        user_totp,
        github_id
        <!--[CONTENT END]-->
        from users where
        user_login = #{keywords} or user_email = #{keywords}
    </select>

    <!--Find by a username-->
    <select id="findByUsername" resultMap="userEntityMap">
        select
        <!--[CONTENT BEGIN]-->
        user_login,
        user_pass,
        user_email,
        user_reg_ip,
        user_reg_date,
        user_status,
        user_totp,
        github_id
        <!--[CONTENT END]-->
        from users where
        user_login = #{username}
    </select>

    <!--Find by an email-->
    <select id="findByEmail" resultMap="userEntityMap">
        select
        <!--[CONTENT BEGIN]-->
        user_login,
        user_pass,
        user_email,
        user_reg_ip,
        user_reg_date,
        user_status,
        user_totp,
        github_id
        <!--[CONTENT END]-->
        from users where
        user_email = #{email}
    </select>

    <!--Find by a GitHub ID-->
    <select id="findByGithubId" resultMap="userEntityMap">
        select
        <!--[CONTENT BEGIN]-->
        user_login,
        user_pass,
        user_email,
        user_reg_ip,
        user_reg_date,
        user_status,
        user_totp,
        github_id
        <!--[CONTENT END]-->
        from users where
        github_id = #{id}
    </select>

    <!--Update password-->
    <update id="updatePassword">
        update users set user_pass = #{password} where user_login = #{keywords} or user_email = #{keywords}
    </update>

    <!--Update last login address by a keys-->
    <update id="updateLoginIp">
        update users set user_last_login_ip = #{ip} where user_login = #{keywords} or user_email = #{keywords}
    </update>

    <insert id="save">
        <!-- :( -->
        insert into
        users(
            user_login,
            user_email,
            user_reg_ip,
            user_last_login_ip,
            user_reg_date,
            user_status,
            user_totp,
            user_pass
        )
        values(
            #{user.username},
            #{user.email},
            #{user.regAddress},
            #{user.lastLoginIp},
            #{user.registerDate},
            #{user.userStatus},
            #{user.userTotp},
            #{user.password}
        )
    </insert>

</mapper>